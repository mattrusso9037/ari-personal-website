@import './variables.scss';

$themes: (
    light: (
        backgroundColor: $white,
        bodyTextColor: $black75,
        navbarBackgroundColor: $mauve,
        header1FontFamily: $header1FontFamily,
        header1FontSize: $header1FontSize,
        header1TextColor: $mocha,
    ),
    dark: (
      backgroundColor: $black75,
      bodyTextColor: $white,
      navbarBackgroundColor: $mauve,
      header1FontFamily: $header1FontFamily,
      header1FontSize: $header1FontSize,
      header1TextColor: $white,
    )
);

@mixin themed() {
    @each $theme, $map in $themes {
      .theme--#{$theme} & {
        $theme-map: () !global;
        @each $key, $submap in $map {
          $value: map-get(map-get($themes, $theme), '#{$key}');
          $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }
        @content;
        $theme-map: null !global;
      }
    }
  }
  
  @function getThemedValue($key) {
    @return map-get($theme-map, $key);
  }